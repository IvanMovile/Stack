        -:    0:Source:/Library/Developer/CommandLineTools/SDKs/MacOSX14.2.sdk/usr/include/c++/v1/__split_buffer
        -:    0:Graph:/Users/ivanmovile/CLionProjects/Stack/cmake-build-debug/_deps/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.gcno
        -:    0:Data:/Users/ivanmovile/CLionProjects/Stack/cmake-build-debug/_deps/googletest-build/googletest/CMakeFiles/gtest.dir/src/gtest-all.cc.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// -*- C++ -*-
        -:    2://===----------------------------------------------------------------------===//
        -:    3://
        -:    4:// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
        -:    5:// See https://llvm.org/LICENSE.txt for license information.
        -:    6:// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
        -:    7://
        -:    8://===----------------------------------------------------------------------===//
        -:    9:
        -:   10:#ifndef _LIBCPP___SPLIT_BUFFER
        -:   11:#define _LIBCPP___SPLIT_BUFFER
        -:   12:
        -:   13:#include <__algorithm/max.h>
        -:   14:#include <__algorithm/move.h>
        -:   15:#include <__algorithm/move_backward.h>
        -:   16:#include <__config>
        -:   17:#include <__iterator/distance.h>
        -:   18:#include <__iterator/iterator_traits.h>
        -:   19:#include <__iterator/move_iterator.h>
        -:   20:#include <__memory/allocate_at_least.h>
        -:   21:#include <__memory/allocator.h>
        -:   22:#include <__memory/allocator_traits.h>
        -:   23:#include <__memory/compressed_pair.h>
        -:   24:#include <__memory/pointer_traits.h>
        -:   25:#include <__memory/swap_allocator.h>
        -:   26:#include <__utility/forward.h>
        -:   27:#include <__utility/move.h>
        -:   28:#include <type_traits>
        -:   29:
        -:   30:#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
        -:   31:#  pragma GCC system_header
        -:   32:#endif
        -:   33:
        -:   34:_LIBCPP_PUSH_MACROS
        -:   35:#include <__undef_macros>
        -:   36:
        -:   37:
        -:   38:_LIBCPP_BEGIN_NAMESPACE_STD
        -:   39:
        -:   40:// __split_buffer allocates a contiguous chunk of memory and stores objects in the range [__begin_, __end_).
        -:   41:// It has uninitialized memory in the ranges  [__first_, __begin_) and [__end_, __end_cap_.first()). That allows
        -:   42:// it to grow both in the front and back without having to move the data.
        -:   43:
        -:   44:template <class _Tp, class _Allocator = allocator<_Tp> >
        -:   45:struct __split_buffer
        -:   46:{
        -:   47:private:
        -:   48:    __split_buffer(const __split_buffer&);
        -:   49:    __split_buffer& operator=(const __split_buffer&);
        -:   50:public:
        -:   51:    typedef _Tp                                             value_type;
        -:   52:    typedef _Allocator                                      allocator_type;
        -:   53:    typedef __libcpp_remove_reference_t<allocator_type>     __alloc_rr;
        -:   54:    typedef allocator_traits<__alloc_rr>                    __alloc_traits;
        -:   55:    typedef value_type&                                     reference;
        -:   56:    typedef const value_type&                               const_reference;
        -:   57:    typedef typename __alloc_traits::size_type              size_type;
        -:   58:    typedef typename __alloc_traits::difference_type        difference_type;
        -:   59:    typedef typename __alloc_traits::pointer                pointer;
        -:   60:    typedef typename __alloc_traits::const_pointer          const_pointer;
        -:   61:    typedef pointer                                         iterator;
        -:   62:    typedef const_pointer                                   const_iterator;
        -:   63:
        -:   64:    pointer                                         __first_;
        -:   65:    pointer                                         __begin_;
        -:   66:    pointer                                         __end_;
        -:   67:    __compressed_pair<pointer, allocator_type> __end_cap_;
        -:   68:
        -:   69:    typedef __add_lvalue_reference_t<allocator_type> __alloc_ref;
        -:   70:    typedef __add_lvalue_reference_t<allocator_type> __alloc_const_ref;
        -:   71:
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE7__allocB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEE7__allocB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE7__allocB7v160006Ev called 21 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEE7__allocB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEE7__allocB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEE7__allocB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEE7__allocB7v160006Ev called 24 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE7__allocB7v160006Ev called 25 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEE7__allocB7v160006Ev called 1 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEE7__allocB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEE7__allocB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE7__allocB7v160006Ev called 1 returned 100% blocks executed 100%
       72:   72:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI __alloc_rr&           __alloc() _NOEXCEPT         {return __end_cap_.second();}
    $$$$$:   72-block  0
    $$$$$:   72-block  1
       21:   72-block  2
    $$$$$:   72-block  3
    $$$$$:   72-block  4
    $$$$$:   72-block  5
       24:   72-block  6
       25:   72-block  7
        1:   72-block  8
    $$$$$:   72-block  9
    $$$$$:   72-block 10
        1:   72-block 11
        -:   73:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI const __alloc_rr&     __alloc() const _NOEXCEPT   {return __end_cap_.second();}
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE9__end_capB7v160006Ev called 24 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEE9__end_capB7v160006Ev called 10 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE9__end_capB7v160006Ev called 12 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEE9__end_capB7v160006Ev called 2 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE9__end_capB7v160006Ev called 2 returned 100% blocks executed 100%
       50:   74:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI pointer&              __end_cap() _NOEXCEPT       {return __end_cap_.first();}
    $$$$$:   74-block  0
    $$$$$:   74-block  1
       24:   74-block  2
    $$$$$:   74-block  3
    $$$$$:   74-block  4
    $$$$$:   74-block  5
       10:   74-block  6
       12:   74-block  7
        2:   74-block  8
    $$$$$:   74-block  9
    $$$$$:   74-block 10
        2:   74-block 11
function _ZNKSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE9__end_capB7v160006Ev called 4 returned 100% blocks executed 100%
function _ZNKSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferImRNS_9allocatorImEEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEE9__end_capB7v160006Ev called 4 returned 100% blocks executed 100%
function _ZNKSt3__114__split_bufferIiRNS_9allocatorIiEEE9__end_capB7v160006Ev called 4 returned 100% blocks executed 100%
function _ZNKSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE9__end_capB7v160006Ev called 0 returned 0% blocks executed 0%
       12:   75:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI const pointer&        __end_cap() const _NOEXCEPT {return __end_cap_.first();}
    $$$$$:   75-block  0
    $$$$$:   75-block  1
        4:   75-block  2
    $$$$$:   75-block  3
    $$$$$:   75-block  4
    $$$$$:   75-block  5
        4:   75-block  6
        4:   75-block  7
    $$$$$:   75-block  8
    $$$$$:   75-block  9
    $$$$$:   75-block 10
    $$$$$:   75-block 11
        -:   76:
        -:   77:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI
        -:   78:    __split_buffer()
        -:   79:        _NOEXCEPT_(is_nothrow_default_constructible<allocator_type>::value);
        -:   80:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI
        -:   81:    explicit __split_buffer(__alloc_rr& __a);
        -:   82:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI
        -:   83:    explicit __split_buffer(const __alloc_rr& __a);
        -:   84:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI __split_buffer(size_type __cap, size_type __start, __alloc_rr& __a);
        -:   85:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI ~__split_buffer();
        -:   86:
        -:   87:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI __split_buffer(__split_buffer&& __c)
        -:   88:        _NOEXCEPT_(is_nothrow_move_constructible<allocator_type>::value);
        -:   89:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI __split_buffer(__split_buffer&& __c, const __alloc_rr& __a);
        -:   90:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI __split_buffer& operator=(__split_buffer&& __c)
        -:   91:        _NOEXCEPT_((__alloc_traits::propagate_on_container_move_assignment::value &&
        -:   92:                is_nothrow_move_assignable<allocator_type>::value) ||
        -:   93:               !__alloc_traits::propagate_on_container_move_assignment::value);
        -:   94:
        -:   95:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI       iterator begin() _NOEXCEPT       {return __begin_;}
        -:   96:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI const_iterator begin() const _NOEXCEPT {return __begin_;}
        -:   97:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI       iterator end() _NOEXCEPT         {return __end_;}
        -:   98:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI const_iterator end() const _NOEXCEPT   {return __end_;}
        -:   99:
        -:  100:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE5clearB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEE5clearB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE5clearB7v160006Ev called 12 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEE5clearB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEE5clearB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEE5clearB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEE5clearB7v160006Ev called 5 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE5clearB7v160006Ev called 6 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEE5clearB7v160006Ev called 1 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEE5clearB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEE5clearB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE5clearB7v160006Ev called 1 returned 100% blocks executed 100%
       25:  101:    void clear() _NOEXCEPT
       25:  102:        {__destruct_at_end(__begin_);}
    $$$$$:  102-block  0
    $$$$$:  102-block  1
       12:  102-block  2
    $$$$$:  102-block  3
    $$$$$:  102-block  4
    $$$$$:  102-block  5
        5:  102-block  6
        6:  102-block  7
        1:  102-block  8
    $$$$$:  102-block  9
    $$$$$:  102-block 10
        1:  102-block 11
        -:  103:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI size_type size() const {return static_cast<size_type>(__end_ - __begin_);}
        -:  104:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI bool empty()     const {return __end_ == __begin_;}
function _ZNKSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE8capacityB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEE8capacityB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE8capacityB7v160006Ev called 4 returned 100% blocks executed 100%
function _ZNKSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEE8capacityB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferImRNS_9allocatorImEEE8capacityB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEE8capacityB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEE8capacityB7v160006Ev called 4 returned 100% blocks executed 100%
function _ZNKSt3__114__split_bufferIiRNS_9allocatorIiEEE8capacityB7v160006Ev called 4 returned 100% blocks executed 100%
function _ZNKSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEE8capacityB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEE8capacityB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEE8capacityB7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNKSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE8capacityB7v160006Ev called 0 returned 0% blocks executed 0%
       12:  105:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI size_type capacity() const {return static_cast<size_type>(__end_cap() - __first_);}
    $$$$$:  105-block  0
    $$$$$:  105-block  1
        4:  105-block  2
    $$$$$:  105-block  3
    $$$$$:  105-block  4
    $$$$$:  105-block  5
        4:  105-block  6
        4:  105-block  7
    $$$$$:  105-block  8
    $$$$$:  105-block  9
    $$$$$:  105-block 10
    $$$$$:  105-block 11
        -:  106:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI size_type __front_spare() const {return static_cast<size_type>(__begin_ - __first_);}
        -:  107:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI size_type __back_spare() const {return static_cast<size_type>(__end_cap() - __end_);}
        -:  108:
        -:  109:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI       reference front()       {return *__begin_;}
        -:  110:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI const_reference front() const {return *__begin_;}
        -:  111:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI       reference back()        {return *(__end_ - 1);}
        -:  112:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI const_reference back() const  {return *(__end_ - 1);}
        -:  113:
        -:  114:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI void reserve(size_type __n);
        -:  115:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI void shrink_to_fit() _NOEXCEPT;
        -:  116:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI void push_front(const_reference __x);
        -:  117:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI void push_back(const_reference __x);
        -:  118:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI void push_front(value_type&& __x);
        -:  119:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI void push_back(value_type&& __x);
        -:  120:    template <class... _Args>
        -:  121:        _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI void emplace_back(_Args&&... __args);
        -:  122:
        -:  123:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI void pop_front() {__destruct_at_begin(__begin_+1);}
        -:  124:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI void pop_back() {__destruct_at_end(__end_-1);}
        -:  125:
        -:  126:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI void __construct_at_end(size_type __n);
        -:  127:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI void __construct_at_end(size_type __n, const_reference __x);
        -:  128:    template <class _InputIter>
        -:  129:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI __enable_if_t<__is_exactly_cpp17_input_iterator<_InputIter>::value>
        -:  130:        __construct_at_end(_InputIter __first, _InputIter __last);
        -:  131:    template <class _ForwardIterator>
        -:  132:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI __enable_if_t<__is_cpp17_forward_iterator<_ForwardIterator>::value>
        -:  133:        __construct_at_end(_ForwardIterator __first, _ForwardIterator __last);
        -:  134:
        -:  135:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI void __destruct_at_begin(pointer __new_begin)
        -:  136:        {__destruct_at_begin(__new_begin, is_trivially_destructible<value_type>());}
        -:  137:        _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI
        -:  138:        void __destruct_at_begin(pointer __new_begin, false_type);
        -:  139:        _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI
        -:  140:        void __destruct_at_begin(pointer __new_begin, true_type);
        -:  141:
        -:  142:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE17__destruct_at_endB7v160006EPS1_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEE17__destruct_at_endB7v160006EPS2_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE17__destruct_at_endB7v160006EPS6_ called 12 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEE17__destruct_at_endB7v160006EPS4_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEE17__destruct_at_endB7v160006EPm called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEE17__destruct_at_endB7v160006EPS2_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEE17__destruct_at_endB7v160006EPS3_ called 5 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE17__destruct_at_endB7v160006EPi called 6 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEE17__destruct_at_endB7v160006EPS3_ called 1 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEE17__destruct_at_endB7v160006EPS3_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEE17__destruct_at_endB7v160006EPS3_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE17__destruct_at_endB7v160006EPS3_ called 1 returned 100% blocks executed 100%
       25:  143:    void __destruct_at_end(pointer __new_last) _NOEXCEPT
       25:  144:        {__destruct_at_end(__new_last, false_type());}
    $$$$$:  144-block  0
    $$$$$:  144-block  1
       12:  144-block  2
    $$$$$:  144-block  3
    $$$$$:  144-block  4
    $$$$$:  144-block  5
        5:  144-block  6
        6:  144-block  7
        1:  144-block  8
    $$$$$:  144-block  9
    $$$$$:  144-block 10
        1:  144-block 11
        -:  145:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI
        -:  146:        void __destruct_at_end(pointer __new_last, false_type) _NOEXCEPT;
        -:  147:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI
        -:  148:        void __destruct_at_end(pointer __new_last, true_type) _NOEXCEPT;
        -:  149:
        -:  150:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI void swap(__split_buffer& __x)
        -:  151:        _NOEXCEPT_(!__alloc_traits::propagate_on_container_swap::value||
        -:  152:                   __is_nothrow_swappable<__alloc_rr>::value);
        -:  153:
        -:  154:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI bool __invariants() const;
        -:  155:
        -:  156:private:
        -:  157:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI
        -:  158:    void __move_assign_alloc(__split_buffer& __c, true_type)
        -:  159:        _NOEXCEPT_(is_nothrow_move_assignable<allocator_type>::value)
        -:  160:        {
        -:  161:            __alloc() = _VSTD::move(__c.__alloc());
        -:  162:        }
        -:  163:
        -:  164:    _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI
        -:  165:    void __move_assign_alloc(__split_buffer&, false_type) _NOEXCEPT
        -:  166:        {}
        -:  167:
        -:  168:    struct _ConstructTransaction {
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE21_ConstructTransactionC1B7v160006EPPS1_m called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE21_ConstructTransactionC2B7v160006EPPS1_m called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE21_ConstructTransactionC1B7v160006EPPS6_m called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE21_ConstructTransactionC2B7v160006EPPS6_m called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE21_ConstructTransactionC1B7v160006EPPS3_m called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE21_ConstructTransactionC2B7v160006EPPS3_m called 0 returned 0% blocks executed 0%
    #####:  169:      _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI explicit _ConstructTransaction(pointer* __p, size_type __n) _NOEXCEPT
    #####:  170:      : __pos_(*__p), __end_(*__p + __n), __dest_(__p) {
    #####:  171:      }
    $$$$$:  171-block  0
    $$$$$:  171-block  1
    $$$$$:  171-block  2
    $$$$$:  171-block  3
    $$$$$:  171-block  4
    $$$$$:  171-block  5
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE21_ConstructTransactionD1B7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE21_ConstructTransactionD2B7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE21_ConstructTransactionD1B7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE21_ConstructTransactionD2B7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE21_ConstructTransactionD1B7v160006Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE21_ConstructTransactionD2B7v160006Ev called 0 returned 0% blocks executed 0%
    #####:  172:      _LIBCPP_CONSTEXPR_SINCE_CXX20 _LIBCPP_HIDE_FROM_ABI ~_ConstructTransaction() {
    #####:  173:        *__dest_ = __pos_;
    #####:  174:      }
    $$$$$:  174-block  0
    $$$$$:  174-block  1
    $$$$$:  174-block  2
    $$$$$:  174-block  3
    $$$$$:  174-block  4
    $$$$$:  174-block  5
        -:  175:      pointer __pos_;
        -:  176:     const pointer __end_;
        -:  177:    private:
        -:  178:     pointer *__dest_;
        -:  179:    };
        -:  180:};
        -:  181:
        -:  182:template <class _Tp, class _Allocator>
        -:  183:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  184:bool
        -:  185:__split_buffer<_Tp, _Allocator>::__invariants() const
        -:  186:{
        -:  187:    if (__first_ == nullptr)
        -:  188:    {
        -:  189:        if (__begin_ != nullptr)
        -:  190:            return false;
        -:  191:        if (__end_ != nullptr)
        -:  192:            return false;
        -:  193:        if (__end_cap() != nullptr)
        -:  194:            return false;
        -:  195:    }
        -:  196:    else
        -:  197:    {
        -:  198:        if (__begin_ < __first_)
        -:  199:            return false;
        -:  200:        if (__end_ < __begin_)
        -:  201:            return false;
        -:  202:        if (__end_cap() < __end_)
        -:  203:            return false;
        -:  204:    }
        -:  205:    return true;
        -:  206:}
        -:  207:
        -:  208://  Default constructs __n objects starting at __end_
        -:  209://  throws if construction throws
        -:  210://  Precondition:  __n > 0
        -:  211://  Precondition:  size() + __n <= capacity()
        -:  212://  Postcondition:  size() == size() + __n
        -:  213:template <class _Tp, class _Allocator>
        -:  214:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  215:void
        -:  216:__split_buffer<_Tp, _Allocator>::__construct_at_end(size_type __n)
        -:  217:{
        -:  218:    _ConstructTransaction __tx(&this->__end_, __n);
        -:  219:    for (; __tx.__pos_ != __tx.__end_; ++__tx.__pos_) {
        -:  220:        __alloc_traits::construct(this->__alloc(), _VSTD::__to_address(__tx.__pos_));
        -:  221:    }
        -:  222:}
        -:  223:
        -:  224://  Copy constructs __n objects starting at __end_ from __x
        -:  225://  throws if construction throws
        -:  226://  Precondition:  __n > 0
        -:  227://  Precondition:  size() + __n <= capacity()
        -:  228://  Postcondition:  size() == old size() + __n
        -:  229://  Postcondition:  [i] == __x for all i in [size() - __n, __n)
        -:  230:template <class _Tp, class _Allocator>
        -:  231:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  232:void
        -:  233:__split_buffer<_Tp, _Allocator>::__construct_at_end(size_type __n, const_reference __x)
        -:  234:{
        -:  235:    _ConstructTransaction __tx(&this->__end_, __n);
        -:  236:    for (; __tx.__pos_ != __tx.__end_; ++__tx.__pos_) {
        -:  237:        __alloc_traits::construct(this->__alloc(),
        -:  238:            _VSTD::__to_address(__tx.__pos_), __x);
        -:  239:    }
        -:  240:}
        -:  241:
        -:  242:template <class _Tp, class _Allocator>
        -:  243:template <class _InputIter>
        -:  244:_LIBCPP_CONSTEXPR_SINCE_CXX20 __enable_if_t<__is_exactly_cpp17_input_iterator<_InputIter>::value>
        -:  245:__split_buffer<_Tp, _Allocator>::__construct_at_end(_InputIter __first, _InputIter __last)
        -:  246:{
        -:  247:    __alloc_rr& __a = this->__alloc();
        -:  248:    for (; __first != __last; ++__first)
        -:  249:    {
        -:  250:        if (__end_ == __end_cap())
        -:  251:        {
        -:  252:            size_type __old_cap = __end_cap() - __first_;
        -:  253:            size_type __new_cap = _VSTD::max<size_type>(2 * __old_cap, 8);
        -:  254:            __split_buffer __buf(__new_cap, 0, __a);
        -:  255:            for (pointer __p = __begin_; __p != __end_; ++__p, (void) ++__buf.__end_)
        -:  256:                __alloc_traits::construct(__buf.__alloc(),
        -:  257:                        _VSTD::__to_address(__buf.__end_), _VSTD::move(*__p));
        -:  258:            swap(__buf);
        -:  259:        }
        -:  260:        __alloc_traits::construct(__a, _VSTD::__to_address(this->__end_), *__first);
        -:  261:        ++this->__end_;
        -:  262:    }
        -:  263:}
        -:  264:
        -:  265:template <class _Tp, class _Allocator>
        -:  266:template <class _ForwardIterator>
        -:  267:_LIBCPP_CONSTEXPR_SINCE_CXX20 __enable_if_t<__is_cpp17_forward_iterator<_ForwardIterator>::value>
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE18__construct_at_endINS_13move_iteratorIPS1_EEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESB_SB_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE18__construct_at_endINS_13move_iteratorIPS6_EEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESF_SF_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE18__construct_at_endINS_13move_iteratorIPS3_EEEENS_9enable_ifIXsr27__is_cpp17_forward_iteratorIT_EE5valueEvE4typeESD_SD_ called 0 returned 0% blocks executed 0%
    #####:  268:__split_buffer<_Tp, _Allocator>::__construct_at_end(_ForwardIterator __first, _ForwardIterator __last)
        -:  269:{
    #####:  270:    _ConstructTransaction __tx(&this->__end_, _VSTD::distance(__first, __last));
    #####:  271:    for (; __tx.__pos_ != __tx.__end_; ++__tx.__pos_, (void) ++__first) {
    $$$$$:  271-block  0
    $$$$$:  271-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  271-block  2
    $$$$$:  271-block  3
    $$$$$:  271-block  4
    $$$$$:  271-block  5
branch  2 never executed
branch  3 never executed
    $$$$$:  271-block  6
    $$$$$:  271-block  7
    $$$$$:  271-block  8
    $$$$$:  271-block  9
branch  4 never executed
branch  5 never executed
    $$$$$:  271-block 10
    $$$$$:  271-block 11
    #####:  272:        __alloc_traits::construct(this->__alloc(),
    $$$$$:  272-block  0
    $$$$$:  272-block  1
    $$$$$:  272-block  2
    #####:  273:            _VSTD::__to_address(__tx.__pos_), *__first);
    $$$$$:  273-block  0
    $$$$$:  273-block  1
    $$$$$:  273-block  2
    #####:  274:    }
    $$$$$:  274-block  0
    $$$$$:  274-block  1
    $$$$$:  274-block  2
    #####:  275:}
    $$$$$:  275-block  0
    $$$$$:  275-block  1
    $$$$$:  275-block  2
    $$$$$:  275-block  3
    $$$$$:  275-block  4
    $$$$$:  275-block  5
    $$$$$:  275-block  6
    $$$$$:  275-block  7
    $$$$$:  275-block  8
        -:  276:
        -:  277:template <class _Tp, class _Allocator>
        -:  278:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  279:inline
        -:  280:void
        -:  281:__split_buffer<_Tp, _Allocator>::__destruct_at_begin(pointer __new_begin, false_type)
        -:  282:{
        -:  283:    while (__begin_ != __new_begin)
        -:  284:        __alloc_traits::destroy(__alloc(), _VSTD::__to_address(__begin_++));
        -:  285:}
        -:  286:
        -:  287:template <class _Tp, class _Allocator>
        -:  288:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  289:inline
        -:  290:void
        -:  291:__split_buffer<_Tp, _Allocator>::__destruct_at_begin(pointer __new_begin, true_type)
        -:  292:{
        -:  293:    __begin_ = __new_begin;
        -:  294:}
        -:  295:
        -:  296:template <class _Tp, class _Allocator>
        -:  297:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  298:inline _LIBCPP_HIDE_FROM_ABI
        -:  299:void
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE17__destruct_at_endB7v160006EPS1_NS_17integral_constantIbLb0EEE called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEE17__destruct_at_endB7v160006EPS2_NS_17integral_constantIbLb0EEE called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE17__destruct_at_endB7v160006EPS6_NS_17integral_constantIbLb0EEE called 12 returned 100% blocks executed 83%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEE17__destruct_at_endB7v160006EPS4_NS_17integral_constantIbLb0EEE called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEE17__destruct_at_endB7v160006EPmNS_17integral_constantIbLb0EEE called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEE17__destruct_at_endB7v160006EPS2_NS_17integral_constantIbLb0EEE called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEE17__destruct_at_endB7v160006EPS3_NS_17integral_constantIbLb0EEE called 5 returned 100% blocks executed 83%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEE17__destruct_at_endB7v160006EPiNS_17integral_constantIbLb0EEE called 6 returned 100% blocks executed 83%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEE17__destruct_at_endB7v160006EPS3_NS_17integral_constantIbLb0EEE called 1 returned 100% blocks executed 50%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEE17__destruct_at_endB7v160006EPS3_NS_17integral_constantIbLb0EEE called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEE17__destruct_at_endB7v160006EPS3_NS_17integral_constantIbLb0EEE called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE17__destruct_at_endB7v160006EPS3_NS_17integral_constantIbLb0EEE called 1 returned 100% blocks executed 50%
       25:  300:__split_buffer<_Tp, _Allocator>::__destruct_at_end(pointer __new_last, false_type) _NOEXCEPT
        -:  301:{
       60:  302:    while (__new_last != __end_)
    $$$$$:  302-block  0
    $$$$$:  302-block  1
branch  0 never executed
branch  1 never executed
    $$$$$:  302-block  2
    $$$$$:  302-block  3
    $$$$$:  302-block  4
branch  2 never executed
branch  3 never executed
    $$$$$:  302-block  5
       12:  302-block  6
       17:  302-block  7
branch  4 taken 5
branch  5 taken 12
        5:  302-block  8
    $$$$$:  302-block  9
    $$$$$:  302-block 10
branch  6 never executed
branch  7 never executed
    $$$$$:  302-block 11
    $$$$$:  302-block 12
    $$$$$:  302-block 13
branch  8 never executed
branch  9 never executed
    $$$$$:  302-block 14
    $$$$$:  302-block 15
    $$$$$:  302-block 16
branch 10 never executed
branch 11 never executed
    $$$$$:  302-block 17
        5:  302-block 18
       20:  302-block 19
branch 12 taken 15
branch 13 taken 5
       15:  302-block 20
        6:  302-block 21
       21:  302-block 22
branch 14 taken 15
branch 15 taken 6
       15:  302-block 23
        1:  302-block 24
        1:  302-block 25
branch 16 taken 0
branch 17 taken 1
    $$$$$:  302-block 26
    $$$$$:  302-block 27
    $$$$$:  302-block 28
branch 18 never executed
branch 19 never executed
    $$$$$:  302-block 29
    $$$$$:  302-block 30
    $$$$$:  302-block 31
branch 20 never executed
branch 21 never executed
    $$$$$:  302-block 32
        1:  302-block 33
        1:  302-block 34
branch 22 taken 0
branch 23 taken 1
    $$$$$:  302-block 35
       35:  303:        __alloc_traits::destroy(__alloc(), _VSTD::__to_address(--__end_));
    $$$$$:  303-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  303-block  1
    $$$$$:  303-block  2
branch  2 never executed
branch  3 never executed
    $$$$$:  303-block  3
        5:  303-block  4
branch  4 taken 5
branch  5 taken 0
    $$$$$:  303-block  5
    $$$$$:  303-block  6
branch  6 never executed
branch  7 never executed
    $$$$$:  303-block  7
    $$$$$:  303-block  8
branch  8 never executed
branch  9 never executed
    $$$$$:  303-block  9
    $$$$$:  303-block 10
branch 10 never executed
branch 11 never executed
    $$$$$:  303-block 11
       15:  303-block 12
branch 12 taken 15
branch 13 taken 0
    $$$$$:  303-block 13
       15:  303-block 14
branch 14 taken 15
branch 15 taken 0
    $$$$$:  303-block 15
    $$$$$:  303-block 16
branch 16 never executed
branch 17 never executed
    $$$$$:  303-block 17
    $$$$$:  303-block 18
branch 18 never executed
branch 19 never executed
    $$$$$:  303-block 19
    $$$$$:  303-block 20
branch 20 never executed
branch 21 never executed
    $$$$$:  303-block 21
    $$$$$:  303-block 22
branch 22 never executed
branch 23 never executed
    $$$$$:  303-block 23
       25:  304:}
    $$$$$:  304-block  0
    $$$$$:  304-block  1
       12:  304-block  2
    $$$$$:  304-block  3
    $$$$$:  304-block  4
    $$$$$:  304-block  5
        5:  304-block  6
        6:  304-block  7
        1:  304-block  8
    $$$$$:  304-block  9
    $$$$$:  304-block 10
        1:  304-block 11
        -:  305:
        -:  306:template <class _Tp, class _Allocator>
        -:  307:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  308:inline _LIBCPP_HIDE_FROM_ABI
        -:  309:void
        -:  310:__split_buffer<_Tp, _Allocator>::__destruct_at_end(pointer __new_last, true_type) _NOEXCEPT
        -:  311:{
        -:  312:    __end_ = __new_last;
        -:  313:}
        -:  314:
        -:  315:template <class _Tp, class _Allocator>
        -:  316:_LIBCPP_CONSTEXPR_SINCE_CXX20
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEEC1EmmS4_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEEC2EmmS4_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEEC1EmmS5_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEEC2EmmS5_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEEC1EmmS8_ called 12 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEEC2EmmS8_ called 12 returned 100% blocks executed 75%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEEC1EmmS7_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEEC2EmmS7_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEEC1EmmS3_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEEC2EmmS3_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEEC1EmmS5_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEEC2EmmS5_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEEC1EmmS6_ called 5 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEEC2EmmS6_ called 5 returned 100% blocks executed 75%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEEC1EmmS3_ called 6 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEEC2EmmS3_ called 6 returned 100% blocks executed 75%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEEC1EmmS6_ called 1 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEEC2EmmS6_ called 1 returned 100% blocks executed 75%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEEC1EmmS6_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEEC2EmmS6_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEEC1EmmS6_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEEC2EmmS6_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEEC1EmmS6_ called 1 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEEC2EmmS6_ called 1 returned 100% blocks executed 75%
       50:  317:__split_buffer<_Tp, _Allocator>::__split_buffer(size_type __cap, size_type __start, __alloc_rr& __a)
       25:  318:    : __end_cap_(nullptr, __a)
       25:  319:{
       25:  320:    if (__cap == 0) {
    $$$$$:  320-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  320-block  1
branch  2 never executed
branch  3 never executed
       12:  320-block  2
branch  4 taken 0
branch  5 taken 12
    $$$$$:  320-block  3
branch  6 never executed
branch  7 never executed
    $$$$$:  320-block  4
branch  8 never executed
branch  9 never executed
    $$$$$:  320-block  5
branch 10 never executed
branch 11 never executed
        5:  320-block  6
branch 12 taken 0
branch 13 taken 5
        6:  320-block  7
branch 14 taken 0
branch 15 taken 6
        1:  320-block  8
branch 16 taken 0
branch 17 taken 1
    $$$$$:  320-block  9
branch 18 never executed
branch 19 never executed
    $$$$$:  320-block 10
branch 20 never executed
branch 21 never executed
        1:  320-block 11
branch 22 taken 0
branch 23 taken 1
    #####:  321:        __first_ = nullptr;
    #####:  322:    } else {
    $$$$$:  322-block  0
    $$$$$:  322-block  1
    $$$$$:  322-block  2
    $$$$$:  322-block  3
    $$$$$:  322-block  4
    $$$$$:  322-block  5
    $$$$$:  322-block  6
    $$$$$:  322-block  7
    $$$$$:  322-block  8
    $$$$$:  322-block  9
    $$$$$:  322-block 10
    $$$$$:  322-block 11
       25:  323:        auto __allocation = std::__allocate_at_least(__alloc(), __cap);
       25:  324:        __first_ = __allocation.ptr;
       25:  325:        __cap = __allocation.count;
    $$$$$:  325-block  0
    $$$$$:  325-block  1
       12:  325-block  2
    $$$$$:  325-block  3
    $$$$$:  325-block  4
    $$$$$:  325-block  5
        5:  325-block  6
        6:  325-block  7
        1:  325-block  8
    $$$$$:  325-block  9
    $$$$$:  325-block 10
        1:  325-block 11
        -:  326:    }
       25:  327:    __begin_ = __end_ = __first_ + __start;
       25:  328:    __end_cap() = __first_ + __cap;
       50:  329:}
    $$$$$:  329-block  0
    $$$$$:  329-block  1
    $$$$$:  329-block  2
    $$$$$:  329-block  3
       12:  329-block  4
       12:  329-block  5
    $$$$$:  329-block  6
    $$$$$:  329-block  7
    $$$$$:  329-block  8
    $$$$$:  329-block  9
    $$$$$:  329-block 10
    $$$$$:  329-block 11
        5:  329-block 12
        5:  329-block 13
        6:  329-block 14
        6:  329-block 15
        1:  329-block 16
        1:  329-block 17
    $$$$$:  329-block 18
    $$$$$:  329-block 19
    $$$$$:  329-block 20
    $$$$$:  329-block 21
        1:  329-block 22
        1:  329-block 23
        -:  330:
        -:  331:template <class _Tp, class _Allocator>
        -:  332:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  333:inline
        -:  334:__split_buffer<_Tp, _Allocator>::__split_buffer()
        -:  335:    _NOEXCEPT_(is_nothrow_default_constructible<allocator_type>::value)
        -:  336:    : __first_(nullptr), __begin_(nullptr), __end_(nullptr), __end_cap_(nullptr, __default_init_tag())
        -:  337:{
        -:  338:}
        -:  339:
        -:  340:template <class _Tp, class _Allocator>
        -:  341:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  342:inline
        -:  343:__split_buffer<_Tp, _Allocator>::__split_buffer(__alloc_rr& __a)
        -:  344:    : __first_(nullptr), __begin_(nullptr), __end_(nullptr), __end_cap_(nullptr, __a)
        -:  345:{
        -:  346:}
        -:  347:
        -:  348:template <class _Tp, class _Allocator>
        -:  349:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  350:inline
        -:  351:__split_buffer<_Tp, _Allocator>::__split_buffer(const __alloc_rr& __a)
        -:  352:    : __first_(nullptr), __begin_(nullptr), __end_(nullptr), __end_cap_(nullptr, __a)
        -:  353:{
        -:  354:}
        -:  355:
        -:  356:template <class _Tp, class _Allocator>
        -:  357:_LIBCPP_CONSTEXPR_SINCE_CXX20
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEED1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEED1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing14TestPartResultERNS_9allocatorIS2_EEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEED1Ev called 12 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEED2Ev called 12 returned 100% blocks executed 83%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEED1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal13edit_distance8EditTypeERNS_9allocatorIS4_EEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEED1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferImRNS_9allocatorImEEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEED1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing12TestPropertyERNS_9allocatorIS2_EEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEED1Ev called 5 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing8TestInfoERNS_9allocatorIS3_EEED2Ev called 5 returned 100% blocks executed 83%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEED1Ev called 6 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIiRNS_9allocatorIiEEED2Ev called 6 returned 100% blocks executed 83%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEED1Ev called 1 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing17TestEventListenerERNS_9allocatorIS3_EEED2Ev called 1 returned 100% blocks executed 33%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEED1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing11EnvironmentERNS_9allocatorIS3_EEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEED1Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIN7testing8internal9TraceInfoERNS_9allocatorIS3_EEED2Ev called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEED1Ev called 1 returned 100% blocks executed 100%
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEED2Ev called 1 returned 100% blocks executed 33%
       50:  358:__split_buffer<_Tp, _Allocator>::~__split_buffer()
       25:  359:{
       25:  360:    clear();
       25:  361:    if (__first_)
    $$$$$:  361-block  0
    $$$$$:  361-block  1
    $$$$$:  361-block  2
    $$$$$:  361-block  3
        4:  361-block  4
        8:  361-block  5
    $$$$$:  361-block  6
    $$$$$:  361-block  7
    $$$$$:  361-block  8
    $$$$$:  361-block  9
    $$$$$:  361-block 10
    $$$$$:  361-block 11
        4:  361-block 12
        1:  361-block 13
        4:  361-block 14
        2:  361-block 15
    $$$$$:  361-block 16
        1:  361-block 17
    $$$$$:  361-block 18
    $$$$$:  361-block 19
    $$$$$:  361-block 20
    $$$$$:  361-block 21
    $$$$$:  361-block 22
        1:  361-block 23
       12:  362:        __alloc_traits::deallocate(__alloc(), __first_, capacity());
    $$$$$:  362-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  362-block  1
    $$$$$:  362-block  2
    $$$$$:  362-block  3
branch  2 never executed
branch  3 never executed
    $$$$$:  362-block  4
    $$$$$:  362-block  5
        4:  362-block  6
branch  4 taken 4
branch  5 taken 0
        4:  362-block  7
    $$$$$:  362-block  8
    $$$$$:  362-block  9
branch  6 never executed
branch  7 never executed
    $$$$$:  362-block 10
    $$$$$:  362-block 11
    $$$$$:  362-block 12
branch  8 never executed
branch  9 never executed
    $$$$$:  362-block 13
    $$$$$:  362-block 14
    $$$$$:  362-block 15
branch 10 never executed
branch 11 never executed
    $$$$$:  362-block 16
    $$$$$:  362-block 17
        4:  362-block 18
branch 12 taken 4
branch 13 taken 0
        4:  362-block 19
    $$$$$:  362-block 20
        4:  362-block 21
branch 14 taken 4
branch 15 taken 0
        4:  362-block 22
    $$$$$:  362-block 23
    $$$$$:  362-block 24
branch 16 never executed
branch 17 never executed
    $$$$$:  362-block 25
    $$$$$:  362-block 26
    $$$$$:  362-block 27
branch 18 never executed
branch 19 never executed
    $$$$$:  362-block 28
    $$$$$:  362-block 29
    $$$$$:  362-block 30
branch 20 never executed
branch 21 never executed
    $$$$$:  362-block 31
    $$$$$:  362-block 32
    $$$$$:  362-block 33
branch 22 never executed
branch 23 never executed
    $$$$$:  362-block 34
    $$$$$:  362-block 35
       50:  363:}
    $$$$$:  363-block  0
    $$$$$:  363-block  1
    $$$$$:  363-block  2
    $$$$$:  363-block  3
       12:  363-block  4
       12:  363-block  5
    $$$$$:  363-block  6
    $$$$$:  363-block  7
    $$$$$:  363-block  8
    $$$$$:  363-block  9
    $$$$$:  363-block 10
    $$$$$:  363-block 11
        5:  363-block 12
        5:  363-block 13
        6:  363-block 14
        6:  363-block 15
        1:  363-block 16
        1:  363-block 17
    $$$$$:  363-block 18
    $$$$$:  363-block 19
    $$$$$:  363-block 20
    $$$$$:  363-block 21
        1:  363-block 22
        1:  363-block 23
        -:  364:
        -:  365:template <class _Tp, class _Allocator>
        -:  366:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  367:__split_buffer<_Tp, _Allocator>::__split_buffer(__split_buffer&& __c)
        -:  368:    _NOEXCEPT_(is_nothrow_move_constructible<allocator_type>::value)
        -:  369:    : __first_(_VSTD::move(__c.__first_)),
        -:  370:      __begin_(_VSTD::move(__c.__begin_)),
        -:  371:      __end_(_VSTD::move(__c.__end_)),
        -:  372:      __end_cap_(_VSTD::move(__c.__end_cap_))
        -:  373:{
        -:  374:    __c.__first_ = nullptr;
        -:  375:    __c.__begin_ = nullptr;
        -:  376:    __c.__end_ = nullptr;
        -:  377:    __c.__end_cap() = nullptr;
        -:  378:}
        -:  379:
        -:  380:template <class _Tp, class _Allocator>
        -:  381:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  382:__split_buffer<_Tp, _Allocator>::__split_buffer(__split_buffer&& __c, const __alloc_rr& __a)
        -:  383:    : __end_cap_(nullptr, __a)
        -:  384:{
        -:  385:    if (__a == __c.__alloc())
        -:  386:    {
        -:  387:        __first_ = __c.__first_;
        -:  388:        __begin_ = __c.__begin_;
        -:  389:        __end_ = __c.__end_;
        -:  390:        __end_cap() = __c.__end_cap();
        -:  391:        __c.__first_ = nullptr;
        -:  392:        __c.__begin_ = nullptr;
        -:  393:        __c.__end_ = nullptr;
        -:  394:        __c.__end_cap() = nullptr;
        -:  395:    }
        -:  396:    else
        -:  397:    {
        -:  398:        auto __allocation = std::__allocate_at_least(__alloc(), __c.size());
        -:  399:        __first_ = __allocation.ptr;
        -:  400:        __begin_ = __end_ = __first_;
        -:  401:        __end_cap() = __first_ + __allocation.count;
        -:  402:        typedef move_iterator<iterator> _Ip;
        -:  403:        __construct_at_end(_Ip(__c.begin()), _Ip(__c.end()));
        -:  404:    }
        -:  405:}
        -:  406:
        -:  407:template <class _Tp, class _Allocator>
        -:  408:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  409:__split_buffer<_Tp, _Allocator>&
        -:  410:__split_buffer<_Tp, _Allocator>::operator=(__split_buffer&& __c)
        -:  411:    _NOEXCEPT_((__alloc_traits::propagate_on_container_move_assignment::value &&
        -:  412:                is_nothrow_move_assignable<allocator_type>::value) ||
        -:  413:               !__alloc_traits::propagate_on_container_move_assignment::value)
        -:  414:{
        -:  415:    clear();
        -:  416:    shrink_to_fit();
        -:  417:    __first_ = __c.__first_;
        -:  418:    __begin_ = __c.__begin_;
        -:  419:    __end_ = __c.__end_;
        -:  420:    __end_cap() = __c.__end_cap();
        -:  421:    __move_assign_alloc(__c,
        -:  422:        integral_constant<bool,
        -:  423:                          __alloc_traits::propagate_on_container_move_assignment::value>());
        -:  424:    __c.__first_ = __c.__begin_ = __c.__end_ = __c.__end_cap() = nullptr;
        -:  425:    return *this;
        -:  426:}
        -:  427:
        -:  428:template <class _Tp, class _Allocator>
        -:  429:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  430:void
        -:  431:__split_buffer<_Tp, _Allocator>::swap(__split_buffer& __x)
        -:  432:        _NOEXCEPT_(!__alloc_traits::propagate_on_container_swap::value||
        -:  433:                   __is_nothrow_swappable<__alloc_rr>::value)
        -:  434:{
        -:  435:    _VSTD::swap(__first_, __x.__first_);
        -:  436:    _VSTD::swap(__begin_, __x.__begin_);
        -:  437:    _VSTD::swap(__end_, __x.__end_);
        -:  438:    _VSTD::swap(__end_cap(), __x.__end_cap());
        -:  439:    _VSTD::__swap_allocator(__alloc(), __x.__alloc());
        -:  440:}
        -:  441:
        -:  442:template <class _Tp, class _Allocator>
        -:  443:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  444:void
        -:  445:__split_buffer<_Tp, _Allocator>::reserve(size_type __n)
        -:  446:{
        -:  447:    if (__n < capacity())
        -:  448:    {
        -:  449:        __split_buffer<value_type, __alloc_rr&> __t(__n, 0, __alloc());
        -:  450:        __t.__construct_at_end(move_iterator<pointer>(__begin_),
        -:  451:                               move_iterator<pointer>(__end_));
        -:  452:        _VSTD::swap(__first_, __t.__first_);
        -:  453:        _VSTD::swap(__begin_, __t.__begin_);
        -:  454:        _VSTD::swap(__end_, __t.__end_);
        -:  455:        _VSTD::swap(__end_cap(), __t.__end_cap());
        -:  456:    }
        -:  457:}
        -:  458:
        -:  459:template <class _Tp, class _Allocator>
        -:  460:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  461:void
        -:  462:__split_buffer<_Tp, _Allocator>::shrink_to_fit() _NOEXCEPT
        -:  463:{
        -:  464:    if (capacity() > size())
        -:  465:    {
        -:  466:#ifndef _LIBCPP_NO_EXCEPTIONS
        -:  467:        try
        -:  468:        {
        -:  469:#endif // _LIBCPP_NO_EXCEPTIONS
        -:  470:            __split_buffer<value_type, __alloc_rr&> __t(size(), 0, __alloc());
        -:  471:            __t.__construct_at_end(move_iterator<pointer>(__begin_),
        -:  472:                                   move_iterator<pointer>(__end_));
        -:  473:            __t.__end_ = __t.__begin_ + (__end_ - __begin_);
        -:  474:            _VSTD::swap(__first_, __t.__first_);
        -:  475:            _VSTD::swap(__begin_, __t.__begin_);
        -:  476:            _VSTD::swap(__end_, __t.__end_);
        -:  477:            _VSTD::swap(__end_cap(), __t.__end_cap());
        -:  478:#ifndef _LIBCPP_NO_EXCEPTIONS
        -:  479:        }
        -:  480:        catch (...)
        -:  481:        {
        -:  482:        }
        -:  483:#endif // _LIBCPP_NO_EXCEPTIONS
        -:  484:    }
        -:  485:}
        -:  486:
        -:  487:template <class _Tp, class _Allocator>
        -:  488:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  489:void
        -:  490:__split_buffer<_Tp, _Allocator>::push_front(const_reference __x)
        -:  491:{
        -:  492:    if (__begin_ == __first_)
        -:  493:    {
        -:  494:        if (__end_ < __end_cap())
        -:  495:        {
        -:  496:            difference_type __d = __end_cap() - __end_;
        -:  497:            __d = (__d + 1) / 2;
        -:  498:            __begin_ = _VSTD::move_backward(__begin_, __end_, __end_ + __d);
        -:  499:            __end_ += __d;
        -:  500:        }
        -:  501:        else
        -:  502:        {
        -:  503:            size_type __c = std::max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);
        -:  504:            __split_buffer<value_type, __alloc_rr&> __t(__c, (__c + 3) / 4, __alloc());
        -:  505:            __t.__construct_at_end(move_iterator<pointer>(__begin_),
        -:  506:                                   move_iterator<pointer>(__end_));
        -:  507:            _VSTD::swap(__first_, __t.__first_);
        -:  508:            _VSTD::swap(__begin_, __t.__begin_);
        -:  509:            _VSTD::swap(__end_, __t.__end_);
        -:  510:            _VSTD::swap(__end_cap(), __t.__end_cap());
        -:  511:        }
        -:  512:    }
        -:  513:    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__begin_-1), __x);
        -:  514:    --__begin_;
        -:  515:}
        -:  516:
        -:  517:template <class _Tp, class _Allocator>
        -:  518:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  519:void
        -:  520:__split_buffer<_Tp, _Allocator>::push_front(value_type&& __x)
        -:  521:{
        -:  522:    if (__begin_ == __first_)
        -:  523:    {
        -:  524:        if (__end_ < __end_cap())
        -:  525:        {
        -:  526:            difference_type __d = __end_cap() - __end_;
        -:  527:            __d = (__d + 1) / 2;
        -:  528:            __begin_ = _VSTD::move_backward(__begin_, __end_, __end_ + __d);
        -:  529:            __end_ += __d;
        -:  530:        }
        -:  531:        else
        -:  532:        {
        -:  533:            size_type __c = std::max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);
        -:  534:            __split_buffer<value_type, __alloc_rr&> __t(__c, (__c + 3) / 4, __alloc());
        -:  535:            __t.__construct_at_end(move_iterator<pointer>(__begin_),
        -:  536:                                   move_iterator<pointer>(__end_));
        -:  537:            _VSTD::swap(__first_, __t.__first_);
        -:  538:            _VSTD::swap(__begin_, __t.__begin_);
        -:  539:            _VSTD::swap(__end_, __t.__end_);
        -:  540:            _VSTD::swap(__end_cap(), __t.__end_cap());
        -:  541:        }
        -:  542:    }
        -:  543:    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__begin_-1),
        -:  544:            _VSTD::move(__x));
        -:  545:    --__begin_;
        -:  546:}
        -:  547:
        -:  548:template <class _Tp, class _Allocator>
        -:  549:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  550:inline _LIBCPP_HIDE_FROM_ABI
        -:  551:void
function _ZNSt3__114__split_bufferIPN7testing9TestSuiteERNS_9allocatorIS3_EEE9push_backB7v160006ERKS3_ called 0 returned 0% blocks executed 0%
    #####:  552:__split_buffer<_Tp, _Allocator>::push_back(const_reference __x)
        -:  553:{
    #####:  554:    if (__end_ == __end_cap())
    $$$$$:  554-block  0
    $$$$$:  554-block  1
        -:  555:    {
    #####:  556:        if (__begin_ > __first_)
    $$$$$:  556-block  0
branch  0 never executed
branch  1 never executed
        -:  557:        {
    #####:  558:            difference_type __d = __begin_ - __first_;
    #####:  559:            __d = (__d + 1) / 2;
    #####:  560:            __end_ = _VSTD::move(__begin_, __end_, __begin_ - __d);
    #####:  561:            __begin_ -= __d;
    #####:  562:        }
    $$$$$:  562-block  0
        -:  563:        else
        -:  564:        {
    #####:  565:            size_type __c = std::max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);
    #####:  566:            __split_buffer<value_type, __alloc_rr&> __t(__c, __c / 4, __alloc());
    #####:  567:            __t.__construct_at_end(move_iterator<pointer>(__begin_),
    $$$$$:  567-block  0
    $$$$$:  567-block  1
    #####:  568:                                   move_iterator<pointer>(__end_));
    $$$$$:  568-block  0
    #####:  569:            _VSTD::swap(__first_, __t.__first_);
    #####:  570:            _VSTD::swap(__begin_, __t.__begin_);
    #####:  571:            _VSTD::swap(__end_, __t.__end_);
    #####:  572:            _VSTD::swap(__end_cap(), __t.__end_cap());
    #####:  573:        }
    $$$$$:  573-block  0
    $$$$$:  573-block  1
    $$$$$:  573-block  2
    #####:  574:    }
    $$$$$:  574-block  0
    #####:  575:    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__end_), __x);
    #####:  576:    ++__end_;
    #####:  577:}
    $$$$$:  577-block  0
        -:  578:
        -:  579:template <class _Tp, class _Allocator>
        -:  580:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  581:void
function _ZNSt3__114__split_bufferIPcRNS_9allocatorIS1_EEE9push_backEOS1_ called 0 returned 0% blocks executed 0%
function _ZNSt3__114__split_bufferINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEERNS4_IS6_EEE9push_backEOS6_ called 0 returned 0% blocks executed 0%
    #####:  582:__split_buffer<_Tp, _Allocator>::push_back(value_type&& __x)
        -:  583:{
    #####:  584:    if (__end_ == __end_cap())
    $$$$$:  584-block  0
    $$$$$:  584-block  1
    $$$$$:  584-block  2
    $$$$$:  584-block  3
        -:  585:    {
    #####:  586:        if (__begin_ > __first_)
    $$$$$:  586-block  0
branch  0 never executed
branch  1 never executed
    $$$$$:  586-block  1
branch  2 never executed
branch  3 never executed
        -:  587:        {
    #####:  588:            difference_type __d = __begin_ - __first_;
    #####:  589:            __d = (__d + 1) / 2;
    #####:  590:            __end_ = _VSTD::move(__begin_, __end_, __begin_ - __d);
    #####:  591:            __begin_ -= __d;
    #####:  592:        }
    $$$$$:  592-block  0
    $$$$$:  592-block  1
        -:  593:        else
        -:  594:        {
    #####:  595:            size_type __c = std::max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);
    #####:  596:            __split_buffer<value_type, __alloc_rr&> __t(__c, __c / 4, __alloc());
    #####:  597:            __t.__construct_at_end(move_iterator<pointer>(__begin_),
    $$$$$:  597-block  0
    $$$$$:  597-block  1
    $$$$$:  597-block  2
    $$$$$:  597-block  3
    #####:  598:                                   move_iterator<pointer>(__end_));
    $$$$$:  598-block  0
    $$$$$:  598-block  1
    #####:  599:            _VSTD::swap(__first_, __t.__first_);
    #####:  600:            _VSTD::swap(__begin_, __t.__begin_);
    #####:  601:            _VSTD::swap(__end_, __t.__end_);
    #####:  602:            _VSTD::swap(__end_cap(), __t.__end_cap());
    #####:  603:        }
    $$$$$:  603-block  0
    $$$$$:  603-block  1
    $$$$$:  603-block  2
    $$$$$:  603-block  3
    $$$$$:  603-block  4
    $$$$$:  603-block  5
    #####:  604:    }
    $$$$$:  604-block  0
    $$$$$:  604-block  1
    #####:  605:    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__end_),
    #####:  606:            _VSTD::move(__x));
    #####:  607:    ++__end_;
    #####:  608:}
    $$$$$:  608-block  0
    $$$$$:  608-block  1
        -:  609:
        -:  610:template <class _Tp, class _Allocator>
        -:  611:template <class... _Args>
        -:  612:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  613:void
        -:  614:__split_buffer<_Tp, _Allocator>::emplace_back(_Args&&... __args)
        -:  615:{
        -:  616:    if (__end_ == __end_cap())
        -:  617:    {
        -:  618:        if (__begin_ > __first_)
        -:  619:        {
        -:  620:            difference_type __d = __begin_ - __first_;
        -:  621:            __d = (__d + 1) / 2;
        -:  622:            __end_ = _VSTD::move(__begin_, __end_, __begin_ - __d);
        -:  623:            __begin_ -= __d;
        -:  624:        }
        -:  625:        else
        -:  626:        {
        -:  627:            size_type __c = std::max<size_type>(2 * static_cast<size_t>(__end_cap() - __first_), 1);
        -:  628:            __split_buffer<value_type, __alloc_rr&> __t(__c, __c / 4, __alloc());
        -:  629:            __t.__construct_at_end(move_iterator<pointer>(__begin_),
        -:  630:                                   move_iterator<pointer>(__end_));
        -:  631:            _VSTD::swap(__first_, __t.__first_);
        -:  632:            _VSTD::swap(__begin_, __t.__begin_);
        -:  633:            _VSTD::swap(__end_, __t.__end_);
        -:  634:            _VSTD::swap(__end_cap(), __t.__end_cap());
        -:  635:        }
        -:  636:    }
        -:  637:    __alloc_traits::construct(__alloc(), _VSTD::__to_address(__end_),
        -:  638:                              _VSTD::forward<_Args>(__args)...);
        -:  639:    ++__end_;
        -:  640:}
        -:  641:
        -:  642:template <class _Tp, class _Allocator>
        -:  643:_LIBCPP_CONSTEXPR_SINCE_CXX20
        -:  644:inline _LIBCPP_HIDE_FROM_ABI
        -:  645:void
        -:  646:swap(__split_buffer<_Tp, _Allocator>& __x, __split_buffer<_Tp, _Allocator>& __y)
        -:  647:        _NOEXCEPT_(_NOEXCEPT_(__x.swap(__y)))
        -:  648:{
        -:  649:    __x.swap(__y);
        -:  650:}
        -:  651:
        -:  652:_LIBCPP_END_NAMESPACE_STD
        -:  653:
        -:  654:_LIBCPP_POP_MACROS
        -:  655:
        -:  656:#endif // _LIBCPP___SPLIT_BUFFER
